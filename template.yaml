AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Grocery Sales Forecasting Pipeline

  This SAM template deploys the entire serverless application stack based on the provided architecture and Lambda code.

Globals:
  Function:
    Timeout: 180
    MemorySize: 512
    Runtime: python3.9

Resources:
  # --- S3 Buckets ---
  RawDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: grocery-price-prediction-raw-data

  CleanedDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: grocery-price-prediction-cleaned-data

  PredictionOutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: grocery-price-prediction-output

  # --- DynamoDB Table (as per architecture diagram, though not used in provided code) ---
  SalesHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: GrocerySalesHistory
      AttributeDefinitions:
        - AttributeName: "item_store_id"
          AttributeType: "S"
        - AttributeName: "date"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "item_store_id"
          KeyType: "HASH"
        - AttributeName: "date"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST

  # --- Lambda Functions ---
  ETLLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda functions/
      Handler: grocery-sale-etl.lambda_handler
      Description: Processes raw sales data from S3, cleans it, engineers features, and stores it in another S3 bucket.
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref RawDataBucket
        - S3WritePolicy:
            BucketName: !Ref CleanedDataBucket
      Events:
        S3UploadTrigger:
          Type: S3
          Properties:
            Bucket: !Ref RawDataBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.csv'

  PredictionLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda functions/
      Handler: grocery-sale-prediction.lambda_handler
      Description: Generates sales predictions based on processed data.
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref CleanedDataBucket
        - S3WritePolicy:
            BucketName: !Ref PredictionOutputBucket
      Events:
        S3CleanedDataTrigger:
          Type: S3
          Properties:
            Bucket: !Ref CleanedDataBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: '.csv'

Outputs:
  RawDataBucketName:
    Description: "Name of the S3 bucket for raw data uploads"
    Value: !Ref RawDataBucket
  CleanedDataBucketName:
    Description: "Name of the S3 bucket for cleaned data"
    Value: !Ref CleanedDataBucket
  PredictionOutputBucketName:
    Description: "Name of the S3 bucket for prediction results"
    Value: !Ref PredictionOutputBucket
  SalesHistoryTableName:
    Description: "Name of the DynamoDB table for sales history"
    Value: !Ref SalesHistoryTable